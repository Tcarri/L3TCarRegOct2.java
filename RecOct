// Tamarie Carrillo tamarie_carrillo@my.cuesta.edu
// CIS 232 / Scovil
// Lab 3

import java.util.Random;

class L3TCarRegOct extends Shape
{
    private double side;

    public static void main(String [] args)
    {
        System.out.println("The contents of the array has 20 Octagons " +
                "with side lengths, areas and perimeters as follows:\n" );

        //  Declare and instantiate an instance of an L3TCarRegOct array
        //and insert at least 20 of your octagon instances, each
        //constructed with a random (double) dimension
        L3TCarRegOct [] arr = new L3TCarRegOct[20];

        Random r = new Random();

        for (int i = 0; i< arr.length; i++)
        {
            arr[i] = new L3TCarRegOct(r.nextDouble());
        }

        for (int i =0; i< arr.length; i++)
        {
            System.out.println("Octagon " + (i + 1) + " : " + arr[i]);
        }

        System.out.println();
        System.out.println("The sorted array:\n ");

        L3TCarRegOct.lab3Sort(arr);

        for (int i =0; i< arr.length; i++)
        {
            System.out.println("Octagon " + (i + 1) + " : " + arr[i]);
        }
    }

    public L3TCarRegOct(double sideLen)
    {
        side = sideLen;
    }

    public void setSide(double s)
    {
        side = s;
    }

    public double getSide()
    {
        return side;
    }

    //  method to sort the octagon array
    public static void lab3Sort(Comparable[] octArr)
    {
        for (int p = 1; p < octArr.length; p++)
        {
            Comparable tmp = octArr[p];
            int j = p;
            for (; j > 0 && tmp.compareTo(octArr[j - 1]) < 0; j--)
                octArr[j] = octArr[j - 1];
                octArr[j] = tmp;
        }
    }

    //  method to calculate the area of octagons
    public double area()
    {
        return (2 * (1 + Math.sqrt(2)) * side * side);
    }

    //  method to calculate the perimeter of octagons
    @Override
    public double perimeter()
    {
        return side * 8;
    }

    // override toString() method
    //displaying any instance variables and the area, each labeled
    @Override
    public String toString()
    {
        return String.format( " Side - " + getSide() + " Area - " + area() + " Perimeter - " + perimeter());
    }
}
